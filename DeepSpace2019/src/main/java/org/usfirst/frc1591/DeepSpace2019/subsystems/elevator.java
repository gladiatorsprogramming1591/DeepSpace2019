// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1591.DeepSpace2019.subsystems;


import org.usfirst.frc1591.DeepSpace2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class elevator extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private DigitalInput elevatorTopSwitch;
    private DigitalInput elevatorBottomSwitch;
    private Spark elevatorMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    //create variables for elevator
    private long lastTimeElevatorUpdated;
	private double rampSpeed;
    private int powerY;
    
    public elevator() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        elevatorTopSwitch = new DigitalInput(0);
        addChild("elevatorTopSwitch",elevatorTopSwitch);
        
        
        elevatorBottomSwitch = new DigitalInput(1);
        addChild("elevatorBottomSwitch",elevatorBottomSwitch);
        
        
        elevatorMotor = new Spark(1);
        addChild("elevatorMotor",elevatorMotor);
        elevatorMotor.setInverted(false);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
        //set default values for variables
        powerY = 0;
    	rampSpeed = 1;
    	lastTimeElevatorUpdated = System.currentTimeMillis();
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    //move elevator to the top
    public void elevatorTop() { //make this while held so loop doesn't continue
        if (elevatorTopSwitch.get() == true){ //if the top switch is not pressed
            elevatorMotor.set(1); //spin motor to move elevator up HOW FAST AND WHAT DIRECTION
        }
        else;
        elevatorLimit();
    }

    //move elevator to the bottom
    public void elevatorBottom(){ //make thie while held so loop doesn't continue 
        if (elevatorBottomSwitch.get() == true) { //if the bottom switch is not pressed
            elevatorMotor.set(-1); //spin motor to move elevator down HOW FAST AND WHAT DIRECTION
        }
        else;
        elevatorLimit();
    }

    public void elevatorLimit(){
        while(elevatorMotor.get() != 0) { //while the motor is in motion
            if (elevatorTopSwitch.get() == false) { // if the switch is pushed in
                elevatorMotor.set(0); //stop the motor
            }
        }
    }
}

